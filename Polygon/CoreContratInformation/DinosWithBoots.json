{
    "contractName": "DinosWithBoots",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "baseTokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "isOperator",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                }
            ],
            "name": "mintTo",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_baseTokenURI",
                    "type": "string"
                }
            ],
            "name": "setBaseTokenURI",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setBaseTokenURI(string)\":{\"details\":\"Sets the base token URI prefix.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"baseTokenURI\":{\"details\":\"Base token URI used as a prefix by tokenURI().\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Override isApprovedForAll to auto-approve OS's proxy contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"d:/NFT/Polygon/contracts/DinosWithBoots.sol\":\"DinosWithBoots\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"d:/NFT/Polygon/contracts/DinosWithBoots.sol\":{\"keccak256\":\"0x3a652d1db86b80b9c470cc6ccf93ae769ee185765b2dc9bd5e4c676712626340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8e2981a27c09e8137fd3ef352823d432f1a89ab1bf9ad5cbff4726d65809da0\",\"dweb:/ipfs/QmWhh6ArUGstrkxWNkVKGnsfs4bZhWBXgnsNn8zvhgFpHB\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"d:/NFT/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600e81526d64696e6f7377697468626f6f747360901b60208083019182528351808501909452600384526213919560ea1b9084015281519192916200006391600091620000b3565b50805162000079906001906020840190620000b3565b5050506040518060800160405280604781526020016200188f604791398051620000ac91600791602090910190620000b3565b5062000195565b828054620000c19062000159565b90600052602060002090601f016020900481019282620000e5576000855562000130565b82601f106200010057805160ff191683800117855562000130565b8280016001018555821562000130579182015b828111156200013057825182559160200191906001019062000113565b506200013e92915062000142565b5090565b5b808211156200013e576000815560010162000143565b600181811c908216806200016e57607f821691505b6020821081036200018f57634e487b7160e01b600052602260045260246000fd5b50919050565b6116ea80620001a56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde1461021d578063c87b56dd14610230578063d547cfb714610243578063e985e9c51461024b57600080fd5b806370a08231146101ce578063755edd17146101ef57806395d89b4114610202578063a22cb4651461020a57600080fd5b806323b872dd116100d357806323b872dd1461018257806330176e131461019557806342842e0e146101a85780636352211e146101bb57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b610118610113366004611186565b61025e565b60405190151581526020015b60405180910390f35b6101356102b0565b60405161012491906111fb565b61015561015036600461120e565b610342565b6040516001600160a01b039091168152602001610124565b61018061017b366004611243565b6103dc565b005b61018061019036600461126d565b610503565b6101806101a3366004611335565b61053b565b6101806101b636600461126d565b610552565b6101556101c936600461120e565b61056d565b6101e16101dc36600461137e565b6105e4565b604051908152602001610124565b6101e16101fd36600461137e565b61066b565b6101356106b9565b610180610218366004611399565b6106c8565b61018061022b3660046113d5565b6106da565b61013561023e36600461120e565b610719565b6101356107f4565b610118610259366004611451565b610882565b60006001600160e01b031982166380ac58cd60e01b148061028f57506001600160e01b03198216635b5e139f60e01b145b806102aa57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102bf90611484565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90611484565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103c05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e78261056d565b9050806001600160a01b0316836001600160a01b0316036104545760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b7565b806001600160a01b03166104666108e0565b6001600160a01b031614806104825750610482816102596108e0565b6104f45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103b7565b6104fe83836108ef565b505050565b61051461050e6108e0565b8261095d565b6105305760405162461bcd60e51b81526004016103b7906114be565b6104fe838383610a34565b805161054e9060079060208401906110d4565b5050565b6104fe838383604051806020016040528060008152506106da565b6000818152600260205260408120546001600160a01b0316806102aa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b7565b60006001600160a01b03821661064f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b7565b506001600160a01b031660009081526003602052604090205490565b60008060015b600781136106b257610687600680546001019055565b600061069260065490565b905061069e8582610bd0565b9150806106aa81611525565b915050610671565b5092915050565b6060600180546102bf90611484565b61054e6106d36108e0565b8383610bea565b6106eb6106e56108e0565b8361095d565b6107075760405162461bcd60e51b81526004016103b7906114be565b61071384848484610cb8565b50505050565b6000818152600260205260409020546060906001600160a01b03166107985760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103b7565b60006107a2610ceb565b905060008151116107c257604051806020016040528060008152506107ed565b806107cc84610cfa565b6040516020016107dd929190611544565b6040516020818303038152906040525b9392505050565b6007805461080190611484565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90611484565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b505050505081565b60007358807bad0b376efc12f5ad86aac70e78ed67dead196001600160a01b038316016108b1575060016102aa565b506001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006108ea610dfb565b905090565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109248261056d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166109d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b7565b60006109e18361056d565b9050806001600160a01b0316846001600160a01b03161480610a085750610a088185610882565b80610a2c5750836001600160a01b0316610a2184610342565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a478261056d565b6001600160a01b031614610aab5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103b7565b6001600160a01b038216610b0d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b7565b610b186000826108ef565b6001600160a01b0383166000908152600360205260408120805460019290610b41908490611573565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b6f90849061158a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61054e828260405180602001604052806000815250610e57565b816001600160a01b0316836001600160a01b031603610c4b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103b7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610cc3848484610a34565b610ccf84848484610e8a565b6107135760405162461bcd60e51b81526004016103b7906115a2565b6060600780546102bf90611484565b606081600003610d215750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d4b5780610d35816115f4565b9150610d449050600a8361161c565b9150610d25565b60008167ffffffffffffffff811115610d6657610d666112a9565b6040519080825280601f01601f191660200182016040528015610d90576020820181803683370190505b5090505b8415610a2c57610da5600183611573565b9150610db2600a86611630565b610dbd90603061158a565b60f81b818381518110610dd257610dd2611644565b60200101906001600160f81b031916908160001a905350610df4600a8661161c565b9450610d94565b6000303303610e5157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610e549050565b50335b90565b610e618383610f92565b610e6e6000848484610e8a565b6104fe5760405162461bcd60e51b81526004016103b7906115a2565b60006001600160a01b0384163b15610f8757836001600160a01b031663150b7a02610eb36108e0565b8786866040518563ffffffff1660e01b8152600401610ed5949392919061165a565b6020604051808303816000875af1925050508015610f10575060408051601f3d908101601f19168201909252610f0d91810190611697565b60015b610f6d573d808015610f3e576040519150601f19603f3d011682016040523d82523d6000602084013e610f43565b606091505b508051600003610f655760405162461bcd60e51b81526004016103b7906115a2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a2c565b506001949350505050565b6001600160a01b038216610fe85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b7565b6000818152600260205260409020546001600160a01b03161561104d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b7565b6001600160a01b038216600090815260036020526040812080546001929061107690849061158a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546110e090611484565b90600052602060002090601f0160209004810192826111025760008555611148565b82601f1061111b57805160ff1916838001178555611148565b82800160010185558215611148579182015b8281111561114857825182559160200191906001019061112d565b50611154929150611158565b5090565b5b808211156111545760008155600101611159565b6001600160e01b03198116811461118357600080fd5b50565b60006020828403121561119857600080fd5b81356107ed8161116d565b60005b838110156111be5781810151838201526020016111a6565b838111156107135750506000910152565b600081518084526111e78160208601602086016111a3565b601f01601f19169290920160200192915050565b6020815260006107ed60208301846111cf565b60006020828403121561122057600080fd5b5035919050565b80356001600160a01b038116811461123e57600080fd5b919050565b6000806040838503121561125657600080fd5b61125f83611227565b946020939093013593505050565b60008060006060848603121561128257600080fd5b61128b84611227565b925061129960208501611227565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156112da576112da6112a9565b604051601f8501601f19908116603f01168101908282118183101715611302576113026112a9565b8160405280935085815286868601111561131b57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561134757600080fd5b813567ffffffffffffffff81111561135e57600080fd5b8201601f8101841361136f57600080fd5b610a2c848235602084016112bf565b60006020828403121561139057600080fd5b6107ed82611227565b600080604083850312156113ac57600080fd5b6113b583611227565b9150602083013580151581146113ca57600080fd5b809150509250929050565b600080600080608085870312156113eb57600080fd5b6113f485611227565b935061140260208601611227565b925060408501359150606085013567ffffffffffffffff81111561142557600080fd5b8501601f8101871361143657600080fd5b611445878235602084016112bf565b91505092959194509250565b6000806040838503121561146457600080fd5b61146d83611227565b915061147b60208401611227565b90509250929050565b600181811c9082168061149857607f821691505b6020821081036114b857634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b01820161153d5761153d61150f565b5060010190565b600083516115568184602088016111a3565b83519083019061156a8183602088016111a3565b01949350505050565b6000828210156115855761158561150f565b500390565b6000821982111561159d5761159d61150f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161153d5761153d61150f565b634e487b7160e01b600052601260045260246000fd5b60008261162b5761162b611606565b500490565b60008261163f5761163f611606565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061168d908301846111cf565b9695505050505050565b6000602082840312156116a957600080fd5b81516107ed8161116d56fea2646970667358221220935690f1d0e19f1f5608143eb643e430fbf332f70e3f83a78c4a7393df318b0464736f6c634300080e0033697066733a2f2f6261667962656968663579367a377a376e7671786f737a66796e71786a36367633657a34756a636866733775716975367a616169666576727971342f7b69647d",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde1461021d578063c87b56dd14610230578063d547cfb714610243578063e985e9c51461024b57600080fd5b806370a08231146101ce578063755edd17146101ef57806395d89b4114610202578063a22cb4651461020a57600080fd5b806323b872dd116100d357806323b872dd1461018257806330176e131461019557806342842e0e146101a85780636352211e146101bb57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b610118610113366004611186565b61025e565b60405190151581526020015b60405180910390f35b6101356102b0565b60405161012491906111fb565b61015561015036600461120e565b610342565b6040516001600160a01b039091168152602001610124565b61018061017b366004611243565b6103dc565b005b61018061019036600461126d565b610503565b6101806101a3366004611335565b61053b565b6101806101b636600461126d565b610552565b6101556101c936600461120e565b61056d565b6101e16101dc36600461137e565b6105e4565b604051908152602001610124565b6101e16101fd36600461137e565b61066b565b6101356106b9565b610180610218366004611399565b6106c8565b61018061022b3660046113d5565b6106da565b61013561023e36600461120e565b610719565b6101356107f4565b610118610259366004611451565b610882565b60006001600160e01b031982166380ac58cd60e01b148061028f57506001600160e01b03198216635b5e139f60e01b145b806102aa57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102bf90611484565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb90611484565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103c05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e78261056d565b9050806001600160a01b0316836001600160a01b0316036104545760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b7565b806001600160a01b03166104666108e0565b6001600160a01b031614806104825750610482816102596108e0565b6104f45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103b7565b6104fe83836108ef565b505050565b61051461050e6108e0565b8261095d565b6105305760405162461bcd60e51b81526004016103b7906114be565b6104fe838383610a34565b805161054e9060079060208401906110d4565b5050565b6104fe838383604051806020016040528060008152506106da565b6000818152600260205260408120546001600160a01b0316806102aa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b7565b60006001600160a01b03821661064f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b7565b506001600160a01b031660009081526003602052604090205490565b60008060015b600781136106b257610687600680546001019055565b600061069260065490565b905061069e8582610bd0565b9150806106aa81611525565b915050610671565b5092915050565b6060600180546102bf90611484565b61054e6106d36108e0565b8383610bea565b6106eb6106e56108e0565b8361095d565b6107075760405162461bcd60e51b81526004016103b7906114be565b61071384848484610cb8565b50505050565b6000818152600260205260409020546060906001600160a01b03166107985760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103b7565b60006107a2610ceb565b905060008151116107c257604051806020016040528060008152506107ed565b806107cc84610cfa565b6040516020016107dd929190611544565b6040516020818303038152906040525b9392505050565b6007805461080190611484565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90611484565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b505050505081565b60007358807bad0b376efc12f5ad86aac70e78ed67dead196001600160a01b038316016108b1575060016102aa565b506001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006108ea610dfb565b905090565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109248261056d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166109d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b7565b60006109e18361056d565b9050806001600160a01b0316846001600160a01b03161480610a085750610a088185610882565b80610a2c5750836001600160a01b0316610a2184610342565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a478261056d565b6001600160a01b031614610aab5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103b7565b6001600160a01b038216610b0d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b7565b610b186000826108ef565b6001600160a01b0383166000908152600360205260408120805460019290610b41908490611573565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b6f90849061158a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61054e828260405180602001604052806000815250610e57565b816001600160a01b0316836001600160a01b031603610c4b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103b7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610cc3848484610a34565b610ccf84848484610e8a565b6107135760405162461bcd60e51b81526004016103b7906115a2565b6060600780546102bf90611484565b606081600003610d215750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d4b5780610d35816115f4565b9150610d449050600a8361161c565b9150610d25565b60008167ffffffffffffffff811115610d6657610d666112a9565b6040519080825280601f01601f191660200182016040528015610d90576020820181803683370190505b5090505b8415610a2c57610da5600183611573565b9150610db2600a86611630565b610dbd90603061158a565b60f81b818381518110610dd257610dd2611644565b60200101906001600160f81b031916908160001a905350610df4600a8661161c565b9450610d94565b6000303303610e5157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610e549050565b50335b90565b610e618383610f92565b610e6e6000848484610e8a565b6104fe5760405162461bcd60e51b81526004016103b7906115a2565b60006001600160a01b0384163b15610f8757836001600160a01b031663150b7a02610eb36108e0565b8786866040518563ffffffff1660e01b8152600401610ed5949392919061165a565b6020604051808303816000875af1925050508015610f10575060408051601f3d908101601f19168201909252610f0d91810190611697565b60015b610f6d573d808015610f3e576040519150601f19603f3d011682016040523d82523d6000602084013e610f43565b606091505b508051600003610f655760405162461bcd60e51b81526004016103b7906115a2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a2c565b506001949350505050565b6001600160a01b038216610fe85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b7565b6000818152600260205260409020546001600160a01b03161561104d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b7565b6001600160a01b038216600090815260036020526040812080546001929061107690849061158a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546110e090611484565b90600052602060002090601f0160209004810192826111025760008555611148565b82601f1061111b57805160ff1916838001178555611148565b82800160010185558215611148579182015b8281111561114857825182559160200191906001019061112d565b50611154929150611158565b5090565b5b808211156111545760008155600101611159565b6001600160e01b03198116811461118357600080fd5b50565b60006020828403121561119857600080fd5b81356107ed8161116d565b60005b838110156111be5781810151838201526020016111a6565b838111156107135750506000910152565b600081518084526111e78160208601602086016111a3565b601f01601f19169290920160200192915050565b6020815260006107ed60208301846111cf565b60006020828403121561122057600080fd5b5035919050565b80356001600160a01b038116811461123e57600080fd5b919050565b6000806040838503121561125657600080fd5b61125f83611227565b946020939093013593505050565b60008060006060848603121561128257600080fd5b61128b84611227565b925061129960208501611227565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156112da576112da6112a9565b604051601f8501601f19908116603f01168101908282118183101715611302576113026112a9565b8160405280935085815286868601111561131b57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561134757600080fd5b813567ffffffffffffffff81111561135e57600080fd5b8201601f8101841361136f57600080fd5b610a2c848235602084016112bf565b60006020828403121561139057600080fd5b6107ed82611227565b600080604083850312156113ac57600080fd5b6113b583611227565b9150602083013580151581146113ca57600080fd5b809150509250929050565b600080600080608085870312156113eb57600080fd5b6113f485611227565b935061140260208601611227565b925060408501359150606085013567ffffffffffffffff81111561142557600080fd5b8501601f8101871361143657600080fd5b611445878235602084016112bf565b91505092959194509250565b6000806040838503121561146457600080fd5b61146d83611227565b915061147b60208401611227565b90509250929050565b600181811c9082168061149857607f821691505b6020821081036114b857634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b01820161153d5761153d61150f565b5060010190565b600083516115568184602088016111a3565b83519083019061156a8183602088016111a3565b01949350505050565b6000828210156115855761158561150f565b500390565b6000821982111561159d5761159d61150f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001820161153d5761153d61150f565b634e487b7160e01b600052601260045260246000fd5b60008261162b5761162b611606565b500490565b60008261163f5761163f611606565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061168d908301846111cf565b9695505050505050565b6000602082840312156116a957600080fd5b81516107ed8161116d56fea2646970667358221220935690f1d0e19f1f5608143eb643e430fbf332f70e3f83a78c4a7393df318b0464736f6c634300080e0033",
    "sourceMap": "1015:1865:0:-:0;;;1248:147;;;;;;;;;-1:-1:-1;1390:113:1;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:1;:::i;:::-;-1:-1:-1;1479:17:1;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;1301:88:0::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;:12:::1;::::0;:88:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;1015:1865:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1015:1865:0;;;-1:-1:-1;1015:1865:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:11;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;1015:1865:0;;;;;;",
    "deployedSourceMap": "1015:1865:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;:::i;:::-;;:::i;:::-;;;565:14:11;;558:22;540:41;;528:2;513:18;1570:300:1;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:11;;;1674:51;;1662:2;1647:18;4000:217:1;1528:203:11;3538:401:1;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;1914:102:0:-;;;;;;:::i;:::-;;:::i;5123:179:1:-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;4068:25:11;;;4056:2;4041:18;1929:205:1;3922:177:11;1401:302:0;;;;;;:::i;:::-;;:::i;2650:102:1:-;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;1215:26:0:-;;;:::i;2106:468::-;;;;;;:::i;:::-;;:::i;1570:300:1:-;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;4095:73;;;;-1:-1:-1;;;4095:73:1;;5980:2:11;4095:73:1;;;5962:21:11;6019:2;5999:18;;;5992:30;6058:34;6038:18;;;6031:62;-1:-1:-1;;;6109:18:11;;;6102:42;6161:19;;4095:73:1;;;;;;;;;-1:-1:-1;4186:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:1;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:1;:2;-1:-1:-1;;;;;3675:11:1;;3667:57;;;;-1:-1:-1;;;3667:57:1;;6393:2:11;3667:57:1;;;6375:21:11;6432:2;6412:18;;;6405:30;6471:34;6451:18;;;6444:62;-1:-1:-1;;;6522:18:11;;;6515:31;6563:19;;3667:57:1;6191:397:11;3667:57:1;3772:5;-1:-1:-1;;;;;3756:21:1;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3756:21:1;;:62;;;;3781:37;3798:5;3805:12;:10;:12::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:1;;6795:2:11;3735:165:1;;;6777:21:11;6834:2;6814:18;;;6807:30;6873:34;6853:18;;;6846:62;6944:26;6924:18;;;6917:54;6988:19;;3735:165:1;6593:420:11;3735:165:1;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;4935:12;:10;:12::i;:::-;4949:7;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:1;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;1914:102:0:-;1982:28;;;;:12;;:28;;;;;:::i;:::-;;1914:102;:::o;5123:179:1:-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:1;;2324:73;;;;-1:-1:-1;;;2324:73:1;;7638:2:11;2324:73:1;;;7620:21:11;7677:2;7657:18;;;7650:30;7716:34;7696:18;;;7689:62;-1:-1:-1;;;7767:18:11;;;7760:39;7816:19;;2324:73:1;7436:405:11;1929:205:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:74;;;;-1:-1:-1;;;2020:74:1;;8048:2:11;2020:74:1;;;8030:21:11;8087:2;8067:18;;;8060:30;8126:34;8106:18;;;8099:62;-1:-1:-1;;;8177:18:11;;;8170:40;8227:19;;2020:74:1;7846:406:11;2020:74:1;-1:-1:-1;;;;;;2111:16:1;;;;;:9;:16;;;;;;;1929:205::o;1401:302:0:-;1452:7;;1500:1;1487:187;1506:1;1503;:4;1487:187;;1522:26;:14;1032:19:7;;1050:1;1032:19;;;945:123;1522:26:0;1557:17;1577:24;:14;918::7;;827:112;1577:24:0;1557:44;;1610:31;1620:9;1631;1610;:31::i;:::-;1657:9;-1:-1:-1;1509:3:0;;;;:::i;:::-;;;;1487:187;;;-1:-1:-1;1693:4:0;1401:302;-1:-1:-1;;1401:302:0:o;2650:102:1:-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;4397:12;:10;:12::i;:::-;4411:8;4421;4378:18;:52::i;5368:320::-;5537:41;5556:12;:10;:12::i;:::-;5570:7;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:1;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:1;2916:76;;;;-1:-1:-1;;;2916:76:1;;8743:2:11;2916:76:1;;;8725:21:11;8782:2;8762:18;;;8755:30;8821:34;8801:18;;;8794:62;-1:-1:-1;;;8872:18:11;;;8865:45;8927:19;;2916:76:1;8541:411:11;2916:76:1;3003:21;3027:10;:8;:10::i;:::-;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:1:o;1215:26:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2106:468::-;2222:15;-1:-1:-1;;;;;;;2328:64:0;;;2324:108;;-1:-1:-1;2416:4:0;2409:11;;2324:108;-1:-1:-1;;;;;;4623:25:1;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;2106:468:0:o;2716:161::-;2806:14;2845:24;:22;:24::i;:::-;2838:31;;2716:161;:::o;11169:171:1:-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:1;-1:-1:-1;;;;;11243:29:1;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:1;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;7552:73;;;;-1:-1:-1;;;7552:73:1;;9634:2:11;7552:73:1;;;9616:21:11;9673:2;9653:18;;;9646:30;9712:34;9692:18;;;9685:62;-1:-1:-1;;;9763:18:11;;;9756:42;9815:19;;7552:73:1;9432:408:11;7552:73:1;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:1;:7;-1:-1:-1;;;;;7692:16:1;;:52;;;;7712:32;7729:5;7736:7;7712:16;:32::i;:::-;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:1;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:1;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:1:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:1;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:1;;10572:81;;;;-1:-1:-1;;;10572:81:1;;10047:2:11;10572:81:1;;;10029:21:11;10086:2;10066:18;;;10059:30;10125:34;10105:18;;;10098:62;-1:-1:-1;;;10176:18:11;;;10169:35;10221:19;;10572:81:1;9845:401:11;10572:81:1;-1:-1:-1;;;;;10671:16:1;;10663:65;;;;-1:-1:-1;;;10663:65:1;;10453:2:11;10663:65:1;;;10435:21:11;10492:2;10472:18;;;10465:30;10531:34;10511:18;;;10504:62;-1:-1:-1;;;10582:18:11;;;10575:34;10626:19;;10663:65:1;10251:400:11;10663:65:1;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:1;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:1;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:1;-1:-1:-1;;;;;10938:21:1;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;8117:108::-;8192:26;8202:2;8206:7;8192:26;;;;;;;;;;;;:9;:26::i;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:1;:5;-1:-1:-1;;;;;11616:17:1;;11608:55;;;;-1:-1:-1;;;11608:55:1;;11121:2:11;11608:55:1;;;11103:21:11;11160:2;11140:18;;;11133:30;11199:27;11179:18;;;11172:55;11244:18;;11608:55:1;10919:349:11;11608:55:1;-1:-1:-1;;;;;11673:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:1;;;;;;;;;;11734:41;;540::11;;;11734::1;;513:18:11;11734:41:1;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:1;;;;;;;:::i;1757:107:0:-;1817:13;1846:12;1839:19;;;;;:::i;328:703:8:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:8;;;;;;;;;;;;-1:-1:-1;;;627:10:8;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:8;;-1:-1:-1;773:2:8;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:8;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:8;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:8;;;;;;;;-1:-1:-1;972:11:8;981:2;972:11;;:::i;:::-;;;844:150;;356:650:0;427:22;493:4;471:10;:27;467:508;;515:18;536:8;;515:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;575:8:0;786:17;780:24;-1:-1:-1;;;;;754:134:0;;-1:-1:-1;467:508:0;;-1:-1:-1;467:508:0;;-1:-1:-1;952:10:0;467:508;356:650;:::o;8446:311:1:-;8571:18;8577:2;8581:7;8571:5;:18::i;:::-;8620:54;8651:1;8655:2;8659:7;8668:5;8620:22;:54::i;:::-;8599:151;;;;-1:-1:-1;;;8599:151:1;;;;;;;:::i;12335:778::-;12485:4;-1:-1:-1;;;;;12505:13:1;;1465:19:5;:23;12501:606:1;;12556:2;-1:-1:-1;;;;;12540:36:1;;12577:12;:10;:12::i;:::-;12591:4;12597:7;12606:5;12540:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:1;;;;;;;;-1:-1:-1;;12540:72:1;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:1;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:1;-1:-1:-1;;;12662:51:1;;-1:-1:-1;12655:58:1;;12501:606;-1:-1:-1;13092:4:1;12335:778;;;;;;:::o;9079:427::-;-1:-1:-1;;;;;9158:16:1;;9150:61;;;;-1:-1:-1;;;9150:61:1;;13288:2:11;9150:61:1;;;13270:21:11;;;13307:18;;;13300:30;13366:34;13346:18;;;13339:62;13418:18;;9150:61:1;13086:356:11;9150:61:1;7225:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:1;:30;9221:58;;;;-1:-1:-1;;;9221:58:1;;13649:2:11;9221:58:1;;;13631:21:11;13688:2;13668:18;;;13661:30;13727;13707:18;;;13700:58;13775:18;;9221:58:1;13447:352:11;9221:58:1;-1:-1:-1;;;;;9346:13:1;;;;;;:9;:13;;;;;:18;;9363:1;;9346:13;:18;;9363:1;;9346:18;:::i;:::-;;;;-1:-1:-1;;9374:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9374:21:1;-1:-1:-1;;;;;9374:21:1;;;;;;;;9411:33;;9374:16;;;9411:33;;9374:16;;9411:33;1982:28:0;1914:102;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:11;-1:-1:-1;;;;;;88:32:11;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:11;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:11;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:11:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:11;;1343:180;-1:-1:-1;1343:180:11:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:11;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:11:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:127::-;2567:10;2562:3;2558:20;2555:1;2548:31;2598:4;2595:1;2588:15;2622:4;2619:1;2612:15;2638:632;2703:5;2733:18;2774:2;2766:6;2763:14;2760:40;;;2780:18;;:::i;:::-;2855:2;2849:9;2823:2;2909:15;;-1:-1:-1;;2905:24:11;;;2931:2;2901:33;2897:42;2885:55;;;2955:18;;;2975:22;;;2952:46;2949:72;;;3001:18;;:::i;:::-;3041:10;3037:2;3030:22;3070:6;3061:15;;3100:6;3092;3085:22;3140:3;3131:6;3126:3;3122:16;3119:25;3116:45;;;3157:1;3154;3147:12;3116:45;3207:6;3202:3;3195:4;3187:6;3183:17;3170:44;3262:1;3255:4;3246:6;3238;3234:19;3230:30;3223:41;;;;2638:632;;;;;:::o;3275:451::-;3344:6;3397:2;3385:9;3376:7;3372:23;3368:32;3365:52;;;3413:1;3410;3403:12;3365:52;3453:9;3440:23;3486:18;3478:6;3475:30;3472:50;;;3518:1;3515;3508:12;3472:50;3541:22;;3594:4;3586:13;;3582:27;-1:-1:-1;3572:55:11;;3623:1;3620;3613:12;3572:55;3646:74;3712:7;3707:2;3694:16;3689:2;3685;3681:11;3646:74;:::i;3731:186::-;3790:6;3843:2;3831:9;3822:7;3818:23;3814:32;3811:52;;;3859:1;3856;3849:12;3811:52;3882:29;3901:9;3882:29;:::i;4104:347::-;4169:6;4177;4230:2;4218:9;4209:7;4205:23;4201:32;4198:52;;;4246:1;4243;4236:12;4198:52;4269:29;4288:9;4269:29;:::i;:::-;4259:39;;4348:2;4337:9;4333:18;4320:32;4395:5;4388:13;4381:21;4374:5;4371:32;4361:60;;4417:1;4414;4407:12;4361:60;4440:5;4430:15;;;4104:347;;;;;:::o;4456:667::-;4551:6;4559;4567;4575;4628:3;4616:9;4607:7;4603:23;4599:33;4596:53;;;4645:1;4642;4635:12;4596:53;4668:29;4687:9;4668:29;:::i;:::-;4658:39;;4716:38;4750:2;4739:9;4735:18;4716:38;:::i;:::-;4706:48;;4801:2;4790:9;4786:18;4773:32;4763:42;;4856:2;4845:9;4841:18;4828:32;4883:18;4875:6;4872:30;4869:50;;;4915:1;4912;4905:12;4869:50;4938:22;;4991:4;4983:13;;4979:27;-1:-1:-1;4969:55:11;;5020:1;5017;5010:12;4969:55;5043:74;5109:7;5104:2;5091:16;5086:2;5082;5078:11;5043:74;:::i;:::-;5033:84;;;4456:667;;;;;;;:::o;5128:260::-;5196:6;5204;5257:2;5245:9;5236:7;5232:23;5228:32;5225:52;;;5273:1;5270;5263:12;5225:52;5296:29;5315:9;5296:29;:::i;:::-;5286:39;;5344:38;5378:2;5367:9;5363:18;5344:38;:::i;:::-;5334:48;;5128:260;;;;;:::o;5393:380::-;5472:1;5468:12;;;;5515;;;5536:61;;5590:4;5582:6;5578:17;5568:27;;5536:61;5643:2;5635:6;5632:14;5612:18;5609:38;5606:161;;5689:10;5684:3;5680:20;5677:1;5670:31;5724:4;5721:1;5714:15;5752:4;5749:1;5742:15;5606:161;;5393:380;;;:::o;7018:413::-;7220:2;7202:21;;;7259:2;7239:18;;;7232:30;7298:34;7293:2;7278:18;;7271:62;-1:-1:-1;;;7364:2:11;7349:18;;7342:47;7421:3;7406:19;;7018:413::o;8257:127::-;8318:10;8313:3;8309:20;8306:1;8299:31;8349:4;8346:1;8339:15;8373:4;8370:1;8363:15;8389:147;8427:3;-1:-1:-1;;;;;8448:30:11;;8445:56;;8481:18;;:::i;:::-;-1:-1:-1;8528:1:11;8517:13;;8389:147::o;8957:470::-;9136:3;9174:6;9168:13;9190:53;9236:6;9231:3;9224:4;9216:6;9212:17;9190:53;:::i;:::-;9306:13;;9265:16;;;;9328:57;9306:13;9265:16;9362:4;9350:17;;9328:57;:::i;:::-;9401:20;;8957:470;-1:-1:-1;;;;8957:470:11:o;10656:125::-;10696:4;10724:1;10721;10718:8;10715:34;;;10729:18;;:::i;:::-;-1:-1:-1;10766:9:11;;10656:125::o;10786:128::-;10826:3;10857:1;10853:6;10850:1;10847:13;10844:39;;;10863:18;;:::i;:::-;-1:-1:-1;10899:9:11;;10786:128::o;11273:414::-;11475:2;11457:21;;;11514:2;11494:18;;;11487:30;11553:34;11548:2;11533:18;;11526:62;-1:-1:-1;;;11619:2:11;11604:18;;11597:48;11677:3;11662:19;;11273:414::o;11692:135::-;11731:3;11752:17;;;11749:43;;11772:18;;:::i;11832:127::-;11893:10;11888:3;11884:20;11881:1;11874:31;11924:4;11921:1;11914:15;11948:4;11945:1;11938:15;11964:120;12004:1;12030;12020:35;;12035:18;;:::i;:::-;-1:-1:-1;12069:9:11;;11964:120::o;12089:112::-;12121:1;12147;12137:35;;12152:18;;:::i;:::-;-1:-1:-1;12186:9:11;;12089:112::o;12206:127::-;12267:10;12262:3;12258:20;12255:1;12248:31;12298:4;12295:1;12288:15;12322:4;12319:1;12312:15;12338:489;-1:-1:-1;;;;;12607:15:11;;;12589:34;;12659:15;;12654:2;12639:18;;12632:43;12706:2;12691:18;;12684:34;;;12754:3;12749:2;12734:18;;12727:31;;;12532:4;;12775:46;;12801:19;;12793:6;12775:46;:::i;:::-;12767:54;12338:489;-1:-1:-1;;;;;;12338:489:11:o;12832:249::-;12901:6;12954:2;12942:9;12933:7;12929:23;12925:32;12922:52;;;12970:1;12967;12960:12;12922:52;13002:9;12996:16;13021:30;13045:5;13021:30;:::i",
    "sourcePath": "d:/NFT/Polygon/contracts/DinosWithBoots.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.14+commit.80d49f37"
    },
    "ast": {
        "absolutePath": "d:/NFT/Polygon/contracts/DinosWithBoots.sol",
        "exportedSymbols": {
            "Address": [
                1498
            ],
            "Context": [
                1520
            ],
            "ContextMixin": [
                43
            ],
            "Counters": [
                1594
            ],
            "DinosWithBoots": [
                176
            ],
            "ERC165": [
                1821
            ],
            "ERC721": [
                1042
            ],
            "IERC165": [
                1833
            ],
            "IERC721": [
                1158
            ],
            "IERC721Metadata": [
                1203
            ],
            "IERC721Receiver": [
                1176
            ],
            "Strings": [
                1797
            ]
        },
        "id": 177,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".4"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:0"
            },
            {
                "absolutePath": "d:/NFT/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "d:/NFT/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 177,
                "sourceUnit": 1043,
                "src": "60:77:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "d:/NFT/node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "file": "d:/NFT/node_modules/@openzeppelin/contracts/utils/Counters.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 177,
                "sourceUnit": 1595,
                "src": "139:72:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": true,
                "baseContracts": [],
                "canonicalName": "ContextMixin",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "215:101:0",
                    "text": " https://github.com/maticnetwork/pos-portal/blob/master/contracts/common/ContextMixin.sol"
                },
                "fullyImplemented": true,
                "id": 43,
                "linearizedBaseContracts": [
                    43
                ],
                "name": "ContextMixin",
                "nameLocation": "336:12:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 41,
                            "nodeType": "Block",
                            "src": "456:550:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 15,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 9,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "471:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 10,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "471:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 13,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "493:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_ContextMixin_$43",
                                                        "typeString": "contract ContextMixin"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_ContextMixin_$43",
                                                        "typeString": "contract ContextMixin"
                                                    }
                                                ],
                                                "id": 12,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "485:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 11,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "485:7:0",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 14,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "485:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "471:27:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 37,
                                        "nodeType": "Block",
                                        "src": "920:55:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 35,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 29,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7,
                                                        "src": "935:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "id": 32,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "952:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 33,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "src": "952:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            ],
                                                            "id": 31,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "944:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_payable_$",
                                                                "typeString": "type(address payable)"
                                                            },
                                                            "typeName": {
                                                                "id": 30,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "944:8:0",
                                                                "stateMutability": "payable",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 34,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "944:19:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "src": "935:28:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "id": 36,
                                                "nodeType": "ExpressionStatement",
                                                "src": "935:28:0"
                                            }
                                        ]
                                    },
                                    "id": 38,
                                    "nodeType": "IfStatement",
                                    "src": "467:508:0",
                                    "trueBody": {
                                        "id": 28,
                                        "nodeType": "Block",
                                        "src": "500:414:0",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    17
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 17,
                                                        "mutability": "mutable",
                                                        "name": "array",
                                                        "nameLocation": "528:5:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 28,
                                                        "src": "515:18:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes"
                                                        },
                                                        "typeName": {
                                                            "id": 16,
                                                            "name": "bytes",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "515:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_storage_ptr",
                                                                "typeString": "bytes"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 20,
                                                "initialValue": {
                                                    "expression": {
                                                        "id": 18,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "536:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 19,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "data",
                                                    "nodeType": "MemberAccess",
                                                    "src": "536:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                                        "typeString": "bytes calldata"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "515:29:0"
                                            },
                                            {
                                                "assignments": [
                                                    22
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 22,
                                                        "mutability": "mutable",
                                                        "name": "index",
                                                        "nameLocation": "567:5:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 28,
                                                        "src": "559:13:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 21,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "559:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 26,
                                                "initialValue": {
                                                    "expression": {
                                                        "expression": {
                                                            "id": 23,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "575:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 24,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "data",
                                                        "nodeType": "MemberAccess",
                                                        "src": "575:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_calldata_ptr",
                                                            "typeString": "bytes calldata"
                                                        }
                                                    },
                                                    "id": 25,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "575:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "559:31:0"
                                            },
                                            {
                                                "AST": {
                                                    "nodeType": "YulBlock",
                                                    "src": "614:289:0",
                                                    "statements": [
                                                        {
                                                            "nodeType": "YulAssignment",
                                                            "src": "744:144:0",
                                                            "value": {
                                                                "arguments": [
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "arguments": [
                                                                                    {
                                                                                        "name": "array",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "790:5:0"
                                                                                    },
                                                                                    {
                                                                                        "name": "index",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "797:5:0"
                                                                                    }
                                                                                ],
                                                                                "functionName": {
                                                                                    "name": "add",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "786:3:0"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "786:17:0"
                                                                            }
                                                                        ],
                                                                        "functionName": {
                                                                            "name": "mload",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "780:5:0"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "780:24:0"
                                                                    },
                                                                    {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "827:42:0",
                                                                        "type": "",
                                                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                                                    }
                                                                ],
                                                                "functionName": {
                                                                    "name": "and",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "754:3:0"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "754:134:0"
                                                            },
                                                            "variableNames": [
                                                                {
                                                                    "name": "sender",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "744:6:0"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "evmVersion": "london",
                                                "externalReferences": [
                                                    {
                                                        "declaration": 17,
                                                        "isOffset": false,
                                                        "isSlot": false,
                                                        "src": "790:5:0",
                                                        "valueSize": 1
                                                    },
                                                    {
                                                        "declaration": 22,
                                                        "isOffset": false,
                                                        "isSlot": false,
                                                        "src": "797:5:0",
                                                        "valueSize": 1
                                                    },
                                                    {
                                                        "declaration": 7,
                                                        "isOffset": false,
                                                        "isSlot": false,
                                                        "src": "744:6:0",
                                                        "valueSize": 1
                                                    }
                                                ],
                                                "id": 27,
                                                "nodeType": "InlineAssembly",
                                                "src": "605:298:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "id": 39,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "992:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "functionReturnParameters": 8,
                                    "id": 40,
                                    "nodeType": "Return",
                                    "src": "985:13:0"
                                }
                            ]
                        },
                        "id": 42,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "msgSender",
                        "nameLocation": "365:9:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 5,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "374:2:0"
                        },
                        "returnParameters": {
                            "id": 8,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "443:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 42,
                                    "src": "427:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                    },
                                    "typeName": {
                                        "id": 6,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "427:15:0",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "426:24:0"
                        },
                        "scope": 43,
                        "src": "356:650:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 177,
                "src": "318:691:0",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 44,
                            "name": "ERC721",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1042,
                            "src": "1042:6:0"
                        },
                        "id": 45,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1042:6:0"
                    },
                    {
                        "baseName": {
                            "id": 46,
                            "name": "ContextMixin",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43,
                            "src": "1050:12:0"
                        },
                        "id": 47,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1050:12:0"
                    }
                ],
                "canonicalName": "DinosWithBoots",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 176,
                "linearizedBaseContracts": [
                    176,
                    43,
                    1042,
                    1203,
                    1158,
                    1821,
                    1833,
                    1520
                ],
                "name": "DinosWithBoots",
                "nameLocation": "1024:14:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "global": false,
                        "id": 51,
                        "libraryName": {
                            "id": 48,
                            "name": "Counters",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1594,
                            "src": "1074:8:0"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "1068:36:0",
                        "typeName": {
                            "id": 50,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 49,
                                "name": "Counters.Counter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1526,
                                "src": "1087:16:0"
                            },
                            "referencedDeclaration": 1526,
                            "src": "1087:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1526_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        }
                    },
                    {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "currentTokenId",
                        "nameLocation": "1135:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "1110:39:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$1526_storage",
                            "typeString": "struct Counters.Counter"
                        },
                        "typeName": {
                            "id": 53,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 52,
                                "name": "Counters.Counter",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1526,
                                "src": "1110:16:0"
                            },
                            "referencedDeclaration": 1526,
                            "src": "1110:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1526_storage_ptr",
                                "typeString": "struct Counters.Counter"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "documentation": {
                            "id": 55,
                            "nodeType": "StructuredDocumentation",
                            "src": "1156:55:0",
                            "text": "@dev Base token URI used as a prefix by tokenURI()."
                        },
                        "functionSelector": "d547cfb7",
                        "id": 57,
                        "mutability": "mutable",
                        "name": "baseTokenURI",
                        "nameLocation": "1229:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "1215:26:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 56,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1215:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 68,
                            "nodeType": "Block",
                            "src": "1294:101:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 64,
                                            "name": "baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 57,
                                            "src": "1301:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "697066733a2f2f6261667962656968663579367a377a376e7671786f737a66796e71786a36367633657a34756a636866733775716975367a616169666576727971342f7b69647d",
                                            "id": 65,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1316:73:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_32e0fe7569e148c497aaef21b36b44b4ce27d0426e9ef5281d789a48f493d560",
                                                "typeString": "literal_string \"ipfs://bafybeihf5y6z7z7nvqxoszfynqxj66v3ez4ujchfs7uqiu6zaaifevryq4/{id}\""
                                            },
                                            "value": "ipfs://bafybeihf5y6z7z7nvqxoszfynqxj66v3ez4ujchfs7uqiu6zaaifevryq4/{id}"
                                        },
                                        "src": "1301:88:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 67,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1301:88:0"
                                }
                            ]
                        },
                        "id": 69,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "64696e6f7377697468626f6f7473",
                                        "id": 60,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1269:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_79c874603d516cf5a2908ab25e051dc987b1197c818239a04d63a872b342783f",
                                            "typeString": "literal_string \"dinoswithboots\""
                                        },
                                        "value": "dinoswithboots"
                                    },
                                    {
                                        "hexValue": "4e4654",
                                        "id": 61,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1287:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_9c4138cd0a1311e4748f70d0fe3dc55f0f5f75e0f20db731225cbc3b8914016a",
                                            "typeString": "literal_string \"NFT\""
                                        },
                                        "value": "NFT"
                                    }
                                ],
                                "id": 62,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 59,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1042,
                                    "src": "1262:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1262:31:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 58,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1259:2:0"
                        },
                        "returnParameters": {
                            "id": 63,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1294:0:0"
                        },
                        "scope": 176,
                        "src": "1248:147:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 113,
                            "nodeType": "Block",
                            "src": "1461:242:0",
                            "statements": [
                                {
                                    "assignments": [
                                        77
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 77,
                                            "mutability": "mutable",
                                            "name": "smth",
                                            "nameLocation": "1476:4:0",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 113,
                                            "src": "1468:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 76,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1468:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 78,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1468:12:0"
                                },
                                {
                                    "body": {
                                        "id": 109,
                                        "nodeType": "Block",
                                        "src": "1513:161:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 89,
                                                            "name": "currentTokenId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 54,
                                                            "src": "1522:14:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Counter_$1526_storage",
                                                                "typeString": "struct Counters.Counter storage ref"
                                                            }
                                                        },
                                                        "id": 91,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "increment",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1552,
                                                        "src": "1522:24:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1526_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1526_storage_ptr_$",
                                                            "typeString": "function (struct Counters.Counter storage pointer)"
                                                        }
                                                    },
                                                    "id": 92,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1522:26:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 93,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1522:26:0"
                                            },
                                            {
                                                "assignments": [
                                                    95
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 95,
                                                        "mutability": "mutable",
                                                        "name": "newItemId",
                                                        "nameLocation": "1565:9:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 109,
                                                        "src": "1557:17:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 94,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1557:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 99,
                                                "initialValue": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 96,
                                                            "name": "currentTokenId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 54,
                                                            "src": "1577:14:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Counter_$1526_storage",
                                                                "typeString": "struct Counters.Counter storage ref"
                                                            }
                                                        },
                                                        "id": 97,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "current",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1538,
                                                        "src": "1577:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1526_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1526_storage_ptr_$",
                                                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                                        }
                                                    },
                                                    "id": 98,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1577:24:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1557:44:0"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 101,
                                                            "name": "recipient",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 71,
                                                            "src": "1620:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 102,
                                                            "name": "newItemId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 95,
                                                            "src": "1631:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 100,
                                                        "name": "_safeMint",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [
                                                            671,
                                                            700
                                                        ],
                                                        "referencedDeclaration": 671,
                                                        "src": "1610:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,uint256)"
                                                        }
                                                    },
                                                    "id": 103,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1610:31:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 104,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1610:31:0"
                                            },
                                            {
                                                "expression": {
                                                    "id": 107,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 105,
                                                        "name": "smth",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77,
                                                        "src": "1650:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "id": 106,
                                                        "name": "newItemId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 95,
                                                        "src": "1657:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1650:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 108,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1650:16:0"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                        },
                                        "id": 85,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 83,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 80,
                                            "src": "1503:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<=",
                                        "rightExpression": {
                                            "hexValue": "37",
                                            "id": 84,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1506:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_7_by_1",
                                                "typeString": "int_const 7"
                                            },
                                            "value": "7"
                                        },
                                        "src": "1503:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 110,
                                    "initializationExpression": {
                                        "assignments": [
                                            80
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 80,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "1496:1:0",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 110,
                                                "src": "1492:5:0",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                },
                                                "typeName": {
                                                    "id": 79,
                                                    "name": "int",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1492:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 82,
                                        "initialValue": {
                                            "hexValue": "31",
                                            "id": 81,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1500:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "1492:9:0"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 87,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "1509:3:0",
                                            "subExpression": {
                                                "id": 86,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 80,
                                                "src": "1509:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            }
                                        },
                                        "id": 88,
                                        "nodeType": "ExpressionStatement",
                                        "src": "1509:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "1487:187:0"
                                },
                                {
                                    "expression": {
                                        "id": 111,
                                        "name": "smth",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 77,
                                        "src": "1693:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 75,
                                    "id": 112,
                                    "nodeType": "Return",
                                    "src": "1686:11:0"
                                }
                            ]
                        },
                        "functionSelector": "755edd17",
                        "id": 114,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintTo",
                        "nameLocation": "1410:6:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 72,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 71,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nameLocation": "1425:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 114,
                                    "src": "1417:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 70,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1417:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1416:19:0"
                        },
                        "returnParameters": {
                            "id": 75,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 114,
                                    "src": "1452:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 73,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1452:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1451:9:0"
                        },
                        "scope": 176,
                        "src": "1401:302:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            393
                        ],
                        "body": {
                            "id": 123,
                            "nodeType": "Block",
                            "src": "1832:32:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 121,
                                        "name": "baseTokenURI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 57,
                                        "src": "1846:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 120,
                                    "id": 122,
                                    "nodeType": "Return",
                                    "src": "1839:19:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 115,
                            "nodeType": "StructuredDocumentation",
                            "src": "1709:44:0",
                            "text": "@dev Returns an URI for a given token ID"
                        },
                        "id": 124,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_baseURI",
                        "nameLocation": "1766:8:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 117,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1799:8:0"
                        },
                        "parameters": {
                            "id": 116,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1774:2:0"
                        },
                        "returnParameters": {
                            "id": 120,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 119,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 124,
                                    "src": "1817:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 118,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1817:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1816:15:0"
                        },
                        "scope": 176,
                        "src": "1757:107:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 134,
                            "nodeType": "Block",
                            "src": "1975:41:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 132,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 130,
                                            "name": "baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 57,
                                            "src": "1982:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 131,
                                            "name": "_baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 127,
                                            "src": "1997:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "1982:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 133,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1982:28:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 125,
                            "nodeType": "StructuredDocumentation",
                            "src": "1870:40:0",
                            "text": "@dev Sets the base token URI prefix."
                        },
                        "functionSelector": "30176e13",
                        "id": 135,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setBaseTokenURI",
                        "nameLocation": "1923:15:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 128,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 127,
                                    "mutability": "mutable",
                                    "name": "_baseTokenURI",
                                    "nameLocation": "1953:13:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 135,
                                    "src": "1939:27:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 126,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1939:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1938:29:0"
                        },
                        "returnParameters": {
                            "id": 129,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1975:0:0"
                        },
                        "scope": 176,
                        "src": "1914:102:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            492
                        ],
                        "body": {
                            "id": 162,
                            "nodeType": "Block",
                            "src": "2239:335:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 151,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 146,
                                            "name": "_operator",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 140,
                                            "src": "2328:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "hexValue": "307835383830376261443042333736656663313246354144383661416337304537386564363764656145",
                                                    "id": 149,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2349:42:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "value": "0x58807baD0B376efc12F5AD86aAc70E78ed67deaE"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 148,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2341:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 147,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2341:7:0",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 150,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2341:51:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "2328:64:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 155,
                                    "nodeType": "IfStatement",
                                    "src": "2324:108:0",
                                    "trueBody": {
                                        "id": 154,
                                        "nodeType": "Block",
                                        "src": "2394:38:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "74727565",
                                                    "id": 152,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2416:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "functionReturnParameters": 145,
                                                "id": 153,
                                                "nodeType": "Return",
                                                "src": "2409:11:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 158,
                                                "name": "_owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 138,
                                                "src": "2548:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 159,
                                                "name": "_operator",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 140,
                                                "src": "2556:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 156,
                                                "name": "ERC721",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1042,
                                                "src": "2524:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1042_$",
                                                    "typeString": "type(contract ERC721)"
                                                }
                                            },
                                            "id": 157,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "isApprovedForAll",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 492,
                                            "src": "2524:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                                "typeString": "function (address,address) view returns (bool)"
                                            }
                                        },
                                        "id": 160,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2524:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 145,
                                    "id": 161,
                                    "nodeType": "Return",
                                    "src": "2517:49:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 136,
                            "nodeType": "StructuredDocumentation",
                            "src": "2022:78:0",
                            "text": " Override isApprovedForAll to auto-approve OS's proxy contract"
                        },
                        "functionSelector": "e985e9c5",
                        "id": 163,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "isApprovedForAll",
                        "nameLocation": "2115:16:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 142,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "2199:8:0"
                        },
                        "parameters": {
                            "id": 141,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 138,
                                    "mutability": "mutable",
                                    "name": "_owner",
                                    "nameLocation": "2150:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 163,
                                    "src": "2142:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 137,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2142:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 140,
                                    "mutability": "mutable",
                                    "name": "_operator",
                                    "nameLocation": "2175:9:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 163,
                                    "src": "2167:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 139,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2167:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2131:60:0"
                        },
                        "returnParameters": {
                            "id": 145,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 144,
                                    "mutability": "mutable",
                                    "name": "isOperator",
                                    "nameLocation": "2227:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 163,
                                    "src": "2222:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 143,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2222:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2221:17:0"
                        },
                        "scope": 176,
                        "src": "2106:468:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1510
                        ],
                        "body": {
                            "id": 174,
                            "nodeType": "Block",
                            "src": "2827:50:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 170,
                                                "name": "ContextMixin",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "2845:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ContextMixin_$43_$",
                                                    "typeString": "type(contract ContextMixin)"
                                                }
                                            },
                                            "id": 171,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "msgSender",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 42,
                                            "src": "2845:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                                "typeString": "function () view returns (address payable)"
                                            }
                                        },
                                        "id": 172,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2845:24:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "functionReturnParameters": 169,
                                    "id": 173,
                                    "nodeType": "Return",
                                    "src": "2838:31:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 164,
                            "nodeType": "StructuredDocumentation",
                            "src": "2580:130:0",
                            "text": " This is used instead of msg.sender as transactions won't be sent by the original token owner, but by OpenSea."
                        },
                        "id": 175,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_msgSender",
                        "nameLocation": "2725:10:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 166,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "2765:8:0"
                        },
                        "parameters": {
                            "id": 165,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2735:2:0"
                        },
                        "returnParameters": {
                            "id": 169,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 168,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "2814:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 175,
                                    "src": "2806:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 167,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2806:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2805:16:0"
                        },
                        "scope": 176,
                        "src": "2716:161:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 177,
                "src": "1015:1865:0",
                "usedErrors": []
            }
        ],
        "src": "33:2847:0"
    },
    "functionHashes": {
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "baseTokenURI()": "d547cfb7",
        "getApproved(uint256)": "081812fc",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mintTo(address)": "755edd17",
        "name()": "06fdde03",
        "ownerOf(uint256)": "6352211e",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setBaseTokenURI(string)": "30176e13",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1173200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2612",
            "baseTokenURI()": "infinite",
            "getApproved(uint256)": "4760",
            "isApprovedForAll(address,address)": "infinite",
            "mintTo(address)": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "2645",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "infinite",
            "setBaseTokenURI(string)": "infinite",
            "supportsInterface(bytes4)": "534",
            "symbol()": "infinite",
            "tokenURI(uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        },
        "internal": {
            "_baseURI()": "infinite",
            "_msgSender()": "infinite"
        }
    }
}